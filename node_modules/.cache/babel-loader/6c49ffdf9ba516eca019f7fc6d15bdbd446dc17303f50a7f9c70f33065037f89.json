{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KayBabs\\\\Documents\\\\MEME generator React\\\\meme generator react\\\\src\\\\components\\\\Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Meme = () => {\n  _s();\n  let [allMemes, setAllMemes] = useState(\"\");\n  let [url, setUrl] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => {\n      let adjustedArr = data.data.memes.map(item => {\n        return {\n          ...item,\n          url: item.url.replace(\"\\\\\", \"\")\n        };\n      });\n      // console.log(adjustedArr)\n      setAllMemes(adjustedArr);\n    });\n  }, []);\n  let memeG = event => {\n    let link;\n    event.preventDefault();\n    const memeArray = allMemes;\n    const randomMeme = Math.floor(Math.random() * memeArray.length);\n    link = memeArray[randomMeme].url;\n    setUrl(link);\n    console.log(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"left\",\n        type: \"text\",\n        placeholder: \"Shut up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"right\",\n        type: \"text\",\n        placeholder: \"and take my Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: memeG,\n        children: \"Get a new meme Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Meme, \"wNSbzQIGooCBOMoIsG8C6kI8x0k=\");\n_c = Meme;\nexport default Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","useState","useEffect","Meme","allMemes","setAllMemes","url","setUrl","fetch","then","res","json","data","adjustedArr","memes","map","item","replace","memeG","event","link","preventDefault","memeArray","randomMeme","Math","floor","random","length","console","log"],"sources":["C:/Users/KayBabs/Documents/MEME generator React/meme generator react/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nlet Meme = () => {\r\n  let [allMemes, setAllMemes] = useState(\"\");\r\n  let [url, setUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let adjustedArr = data.data.memes.map((item) => {\r\n          return {\r\n            ...item,\r\n            url: item.url.replace(\"\\\\\", \"\"),\r\n          };\r\n        });\r\n        // console.log(adjustedArr)\r\n        setAllMemes(adjustedArr);\r\n      });\r\n  }, []);\r\n\r\n  let memeG = (event) => {\r\n    let link;\r\n    event.preventDefault();\r\n    const memeArray = allMemes;\r\n    const randomMeme = Math.floor(Math.random() * memeArray.length);\r\n    link = memeArray[randomMeme].url;\r\n    setUrl(link);\r\n    console.log(link);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"item\">\r\n        <input className=\"left\" type=\"text\" placeholder=\"Shut up\" />\r\n        <input className=\"right\" type=\"text\" placeholder=\"and take my Money\" />\r\n        <button className=\"btn\" onClick={memeG}>\r\n          Get a new meme Image\r\n        </button>\r\n        <img src={url} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Meme;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,IAAIC,IAAI,GAAG,MAAM;EAAA;EACf,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAI,CAACK,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhCC,SAAS,CAAC,MAAM;IACdM,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIC,WAAW,GAAGD,IAAI,CAACA,IAAI,CAACE,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;QAC9C,OAAO;UACL,GAAGA,IAAI;UACPV,GAAG,EAAEU,IAAI,CAACV,GAAG,CAACW,OAAO,CAAC,IAAI,EAAE,EAAE;QAChC,CAAC;MACH,CAAC,CAAC;MACF;MACAZ,WAAW,CAACQ,WAAW,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIK,KAAK,GAAIC,KAAK,IAAK;IACrB,IAAIC,IAAI;IACRD,KAAK,CAACE,cAAc,EAAE;IACtB,MAAMC,SAAS,GAAGlB,QAAQ;IAC1B,MAAMmB,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,SAAS,CAACK,MAAM,CAAC;IAC/DP,IAAI,GAAGE,SAAS,CAACC,UAAU,CAAC,CAACjB,GAAG;IAChCC,MAAM,CAACa,IAAI,CAAC;IACZQ,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EACnB,CAAC;EAED,oBACE;IAAA,uBACE;MAAM,SAAS,EAAC,MAAM;MAAA,wBACpB;QAAO,SAAS,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5D;QAAO,SAAS,EAAC,OAAO;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAG,eACvE;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAEF,KAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE9B,eACT;QAAK,GAAG,EAAEZ;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACZ;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAzCEH,IAAI;AAAA,KAAJA,IAAI;AA0CR,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}