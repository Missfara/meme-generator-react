{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KayBabs\\\\Documents\\\\MEME generator React\\\\meme generator react\\\\src\\\\components\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const [count, setCount] = React.useState(0);\n  let plus = () => {\n    setCount(prevCount => prevCount + 1);\n  };\n  let minus = () => {\n    setCount(prevCount => prevCount - 1);\n  };\n\n  // GOOD BUT NOT BEST PRATICE, best to use \n  //   let plus = () => {\n  //     setCount(count + 1);\n  //   };\n  //   let minus = () => {\n  //     setCount(count - 1);\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"count\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"count-minus\",\n      onClick: minus,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter--count\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"count-plus\",\n      onClick: plus,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","Counter","count","setCount","useState","plus","prevCount","minus"],"sources":["C:/Users/KayBabs/Documents/MEME generator React/meme generator react/src/components/Counter.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Counter = () => {\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  let plus = () => {\r\n    setCount((prevCount) => prevCount + 1);\r\n  };\r\n\r\n  let minus = () => {\r\n    setCount((prevCount) => prevCount - 1);\r\n  };\r\n\r\n\r\n// GOOD BUT NOT BEST PRATICE, best to use \r\n  //   let plus = () => {\r\n  //     setCount(count + 1);\r\n  //   };\r\n  //   let minus = () => {\r\n  //     setCount(count - 1);\r\n  //   };\r\n\r\n  return (\r\n    <div className=\"count\">\r\n      <button className=\"count-minus\" onClick={minus}>\r\n        -\r\n      </button>\r\n      <div className=\"counter--count\">\r\n        <h1>{count}</h1>\r\n      </div>\r\n      <button className=\"count-plus\" onClick={plus}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Counter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC;EAE3C,IAAIC,IAAI,GAAG,MAAM;IACfF,QAAQ,CAAEG,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EACxC,CAAC;EAED,IAAIC,KAAK,GAAG,MAAM;IAChBJ,QAAQ,CAAEG,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EACxC,CAAC;;EAGH;EACE;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,wBACpB;MAAQ,SAAS,EAAC,aAAa;MAAC,OAAO,EAAEC,KAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEtC,eACT;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC7B;QAAA,UAAKL;MAAK;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACZ,eACN;MAAQ,SAAS,EAAC,YAAY;MAAC,OAAO,EAAEG,IAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEpC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GAjCIJ,OAAO;AAAA,KAAPA,OAAO;AAkCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}